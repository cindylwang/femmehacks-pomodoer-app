{"ast":null,"code":"var _jsxFileName = \"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useList from './useList';\nimport './ToDoList.css';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = props => {\n  _s();\n\n  const roomId = props.room; // gets roomId from props\n\n  console.log('roomId', roomId);\n  const {\n    tasks,\n    sendTask,\n    statuses,\n    sendStatus,\n    sendClear\n  } = useList(roomId);\n  const [newTask, setNewTask] = React.useState(\"\"); // handles typing input\n\n  const handleChange = e => {\n    setNewTask(e.target.value);\n  }; // sends task to server so it shows up for both people\n\n\n  const handleSubmit = () => {\n    sendTask(newTask);\n    setNewTask('');\n  }; // makes it so that hitting the enter key also works for submission\n\n\n  const handleEnter = e => {\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  }; // on click of task, sends statuses and index so that statuses can be updated\n\n\n  const handleClick = e => {\n    console.log('handleClick');\n    e.preventDefault();\n    const index = e.currentTarget.id;\n    sendStatus(index, statuses);\n  }; // on click of clear, updates and sends tasks and statuses to server\n\n\n  const handleClear = () => {\n    console.log('handleClear called');\n    sendClear(statuses, tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskList-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ToDoForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toDoFormTitle\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"TASKS:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTask,\n        type: \"text\",\n        onChange: handleChange,\n        placeholder: \"add a task...\",\n        onKeyPress: handleEnter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"addTask\",\n        onClick: handleSubmit,\n        children: \"ADD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"checklist\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"TO DO:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), tasks.map((task, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          id: i,\n          className: `todo ${task.ownedByCurrentUser ? \"my-task\" : \"other-task\"} ${statuses[i] ? \"strike\" : \"\"}`,\n          onClick: handleClick,\n          children: task.body\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"center\",\n      variant: \"primary\",\n      onClick: handleClear,\n      children: \"CLEAR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDoList, \"CSQLWpgUc2O3p2bf3MDxpValqY4=\", false, function () {\n  return [useList];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/ToDoList.js"],"names":["React","useList","Button","ToDoList","props","roomId","room","console","log","tasks","sendTask","statuses","sendStatus","sendClear","newTask","setNewTask","useState","handleChange","e","target","value","handleSubmit","handleEnter","key","handleClick","preventDefault","index","currentTarget","id","handleClear","map","task","i","ownedByCurrentUser","body"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport useList from './useList';\nimport './ToDoList.css';\nimport Button from 'react-bootstrap/Button';\n\nconst ToDoList = (props) => {\n    const roomId =  props.room; // gets roomId from props\n    console.log('roomId', roomId)\n    const {tasks, sendTask, statuses, sendStatus, sendClear} = useList(roomId);\n    const [newTask, setNewTask] = React.useState(\"\");\n\n    // handles typing input\n    const handleChange = (e) => {\n        setNewTask(e.target.value);\n    }\n    \n    // sends task to server so it shows up for both people\n    const handleSubmit = () => {\n        sendTask(newTask);\n        setNewTask('');\n    }\n\n    // makes it so that hitting the enter key also works for submission\n    const handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            handleSubmit()\n        }\n    }\n\n    // on click of task, sends statuses and index so that statuses can be updated\n    const handleClick = (e) => {\n        console.log('handleClick');\n        e.preventDefault();\n        const index = e.currentTarget.id;\n        sendStatus(index,statuses)\n    }\n\n    // on click of clear, updates and sends tasks and statuses to server\n    const handleClear = () => {\n        console.log('handleClear called')\n        sendClear(statuses,tasks);\n    }\n\n    return (\n        <div className='taskList-page'>\n            <div className='ToDoForm'>\n                <div className=\"toDoFormTitle\">\n                    <p>TASKS:</p>\n                </div>\n                <input\n                    value={newTask}\n                    type='text'\n                    onChange={handleChange}\n                    placeholder=\"add a task...\"\n                    onKeyPress={handleEnter}\n                ></input>\n                <Button variant='primary' className = 'addTask' onClick={handleSubmit}>ADD</Button>\n            </div>\n            \n            <div className='tasks-container'>\n                \n                <ul className='checklist'>\n                    <p>TO DO:</p>\n                    {tasks.map((task,i)=> (\n                        <li\n                            key={i}\n                            id={i}\n                            className= {`todo ${task.ownedByCurrentUser ? \"my-task\" : \"other-task\"} ${statuses[i] ? \"strike\" : \"\"}`}\n                            onClick={handleClick}\n                \n                        >\n                            {task.body}\n                        </li>\n                        \n                    ))}\n                </ul>\n            </div>\n            <Button className='center' variant='primary' onClick={handleClear}>CLEAR</Button>     \n        </div>\n    );\n};\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}