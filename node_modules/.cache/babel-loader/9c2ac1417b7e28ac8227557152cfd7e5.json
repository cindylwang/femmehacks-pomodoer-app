{"ast":null,"code":"var _jsxFileName = \"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useList from './useList';\nimport './ToDoList.css';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = props => {\n  _s();\n\n  const {\n    roomId\n  } = props.match.params; // gets roomId from the URl\n\n  const {\n    tasks,\n    sendTask,\n    statuses,\n    sendStatus,\n    sendClear\n  } = useList(roomId);\n  const [newTask, setNewTask] = React.useState(\"\"); // handles typing input\n\n  const handleChange = e => {\n    setNewTask(e.target.value);\n  }; // sends task to server so it shows up for both people\n\n\n  const handleSubmit = () => {\n    sendTask(newTask);\n    setNewTask('');\n  }; // makes it so that hitting the enter key also works for submission\n\n\n  const handleEnter = e => {\n    if (e.key === 'Enter') {\n      handleSubmit();\n    }\n  }; // on click of task, sends statuses and index so that statuses can be updated\n\n\n  const handleClick = e => {\n    console.log('handleClick');\n    e.preventDefault();\n    const index = e.currentTarget.id;\n    sendStatus(index, statuses);\n  }; // on click of clear, updates and sends tasks and statuses to server\n\n\n  const handleClear = () => {\n    console.log('handleClear called');\n    sendClear(statuses, tasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskList-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      type: \"text\",\n      onChange: handleChange,\n      placeholder: \"add a task...\",\n      onKeyPress: handleEnter,\n      className: \"ToDoForm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"TO DO:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), toDoList.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"checklist\",\n        children: /*#__PURE__*/_jsxDEV(ToDo, {\n          todo: todo,\n          handleToggle: handleToggle,\n          handleFilter: handleFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleFilter,\n        children: \"CLEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDoList, \"CSQLWpgUc2O3p2bf3MDxpValqY4=\", false, function () {\n  return [useList];\n});\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/ToDoList.js"],"names":["React","useList","Button","ToDoList","props","roomId","match","params","tasks","sendTask","statuses","sendStatus","sendClear","newTask","setNewTask","useState","handleChange","e","target","value","handleSubmit","handleEnter","key","handleClick","console","log","preventDefault","index","currentTarget","id","handleClear","toDoList","map","todo","handleToggle","handleFilter"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAACC,IAAAA;AAAD,MAAYD,KAAK,CAACE,KAAN,CAAYC,MAA9B,CADwB,CACc;;AACtC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA;AAAxC,MAAqDX,OAAO,CAACI,MAAD,CAAlE;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACe,QAAN,CAAe,EAAf,CAA9B,CAHwB,CAKxB;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBH,IAAAA,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD,CANwB,CAUxB;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvBX,IAAAA,QAAQ,CAACI,OAAD,CAAR;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAHD,CAXwB,CAgBxB;;;AACA,QAAMO,WAAW,GAAIJ,CAAD,IAAO;AACvB,QAAIA,CAAC,CAACK,GAAF,KAAU,OAAd,EAAuB;AACnBF,MAAAA,YAAY;AACf;AACJ,GAJD,CAjBwB,CAuBxB;;;AACA,QAAMG,WAAW,GAAIN,CAAD,IAAO;AACvBO,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAR,IAAAA,CAAC,CAACS,cAAF;AACA,UAAMC,KAAK,GAAGV,CAAC,CAACW,aAAF,CAAgBC,EAA9B;AACAlB,IAAAA,UAAU,CAACgB,KAAD,EAAOjB,QAAP,CAAV;AACH,GALD,CAxBwB,CA+BxB;;;AACA,QAAMoB,WAAW,GAAG,MAAM;AACtBN,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAb,IAAAA,SAAS,CAACF,QAAD,EAAUF,KAAV,CAAT;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AACI,MAAA,KAAK,EAAEK,OADX;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,QAAQ,EAAEG,YAHd;AAII,MAAA,WAAW,EAAC,eAJhB;AAKI,MAAA,UAAU,EAAEK,WALhB;AAMI,MAAA,SAAS,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,EAUKU,QAAQ,CAACC,GAAT,CAAaC,IAAI,IAAI;AAClB,0BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEA,IAAZ;AAAkB,UAAA,YAAY,EAAEC,YAAhC;AAA8C,UAAA,YAAY,EAAEC;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANA,CAVL,eAiBI;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA,6BACK,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEA,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA9DD;;GAAMhC,Q;UAEyDF,O;;;KAFzDE,Q;AAgEN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nimport useList from './useList';\nimport './ToDoList.css';\nimport Button from 'react-bootstrap/Button';\n\nconst ToDoList = (props) => {\n    const {roomId} =  props.match.params; // gets roomId from the URl\n    const {tasks, sendTask, statuses, sendStatus, sendClear} = useList(roomId);\n    const [newTask, setNewTask] = React.useState(\"\");\n\n    // handles typing input\n    const handleChange = (e) => {\n        setNewTask(e.target.value);\n    }\n    \n    // sends task to server so it shows up for both people\n    const handleSubmit = () => {\n        sendTask(newTask);\n        setNewTask('');\n    }\n\n    // makes it so that hitting the enter key also works for submission\n    const handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            handleSubmit()\n        }\n    }\n\n    // on click of task, sends statuses and index so that statuses can be updated\n    const handleClick = (e) => {\n        console.log('handleClick');\n        e.preventDefault();\n        const index = e.currentTarget.id;\n        sendStatus(index,statuses)\n    }\n\n    // on click of clear, updates and sends tasks and statuses to server\n    const handleClear = () => {\n        console.log('handleClear called')\n        sendClear(statuses,tasks);\n    }\n\n    return (\n        <div className='taskList-page'>\n            <input\n                value={newTask}\n                type='text'\n                onChange={handleChange}\n                placeholder=\"add a task...\"\n                onKeyPress={handleEnter}\n                className='ToDoForm'\n            ></input>\n            <p>TO DO:</p>\n            {toDoList.map(todo => {\n                return (\n                    <ul className='checklist'>\n                        <ToDo todo={todo} handleToggle={handleToggle} handleFilter={handleFilter}/>\n                    </ul>\n                )\n            })}\n            <div className ='center'>\n                 <Button variant=\"primary\" onClick={handleFilter}>CLEAR</Button>\n            </div>\n                \n            \n        </div>\n    );\n};\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}