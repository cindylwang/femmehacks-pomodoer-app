{"ast":null,"code":"var _jsxFileName = \"/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useTimer from './useTimer';\nimport './ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OurTimer = props => {\n  _s();\n\n  const roomId = props.room;\n  const {\n    start,\n    sendStart,\n    work,\n    sendWork\n  } = useTimer(roomId);\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0); //function for decrementing timer\n\n  const decrement = () => {\n    if (start === true) {\n      const intervalId = setInterval(() => {\n        setSeconds(prev => prev - 1);\n      }, 1000);\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }; //calls decrement every time start changes\n\n\n  useEffect(decrement, [start]); //function for adjusting display time\n\n  const time = () => {\n    if (start === true) {\n      sendWork(work, seconds, minutes);\n    }\n  }; //calls time on every re-render\n\n\n  useEffect(time); //click handlers\n\n  const handleStart = () => sendStart(start);\n\n  const handleWork = () => {\n    sendWork(!work);\n\n    if (work === true) {\n      setMinutes(5);\n      setSeconds(0);\n    } else {\n      setMinutes(25);\n      setSeconds(0);\n    }\n  }; //variables for display\n\n\n  let startStatus = start ? 'STOP' : 'START';\n  let workStatus = work ? 'REST' : 'WORK'; //adds zero when seconds gets into single digits\n\n  let secondsDisplay;\n\n  if (seconds < 10) {\n    secondsDisplay = '0' + seconds;\n  } else {\n    secondsDisplay = seconds;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"timerTimer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleStart,\n            children: startStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleWork,\n            children: workStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"timerMargin\",\n          children: minutes + ':' + secondsDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OurTimer, \"pFh3hnSh4wS2Y+ybptRG207/SB8=\", false, function () {\n  return [useTimer];\n});\n\n_c = OurTimer;\nexport default OurTimer;\n\nvar _c;\n\n$RefreshReg$(_c, \"OurTimer\");","map":{"version":3,"sources":["/Users/bubird/Documents/GitHub/femmehacks-pomodoer-app/src/Timer.js"],"names":["React","useState","useEffect","Button","useTimer","OurTimer","props","roomId","room","start","sendStart","work","sendWork","minutes","setMinutes","seconds","setSeconds","decrement","intervalId","setInterval","prev","clearInterval","time","handleStart","handleWork","startStatus","workStatus","secondsDisplay"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,MAAM,GAAID,KAAK,CAACE,IAAtB;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAAqCR,QAAQ,CAACG,MAAD,CAAnD;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC,CAJ0B,CAM1B;;AACA,QAAMgB,SAAS,GAAG,MAAM;AACtB,QAAIR,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAMS,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCH,QAAAA,UAAU,CAAEI,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAV;AACD,OAF6B,EAE3B,IAF2B,CAA9B;AAGA,aAAO,MAAM;AACXC,QAAAA,aAAa,CAACH,UAAD,CAAb;AACD,OAFD;AAGD;AACF,GATD,CAP0B,CAkB1B;;;AACAhB,EAAAA,SAAS,CAACe,SAAD,EAAY,CAACR,KAAD,CAAZ,CAAT,CAnB0B,CAsB1B;;AACA,QAAMa,IAAI,GAAG,MAAM;AACjB,QAAIb,KAAK,KAAK,IAAd,EAAmB;AACjBG,MAAAA,QAAQ,CAACD,IAAD,EAAMI,OAAN,EAAcF,OAAd,CAAR;AACD;AACF,GAJD,CAvB0B,CA6B1B;;;AACAX,EAAAA,SAAS,CAACoB,IAAD,CAAT,CA9B0B,CAgC1B;;AACA,QAAMC,WAAW,GAAG,MAAMb,SAAS,CAACD,KAAD,CAAnC;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACvBZ,IAAAA,QAAQ,CAAC,CAACD,IAAF,CAAR;;AACA,QAAIA,IAAI,KAAK,IAAb,EAAkB;AAChBG,MAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD,KAHD,MAGO;AACLF,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,CAAD,CAAV;AACD;AACF,GATD,CAnC0B,CA8C1B;;;AACA,MAAIS,WAAW,GAAIhB,KAAK,GAAG,MAAH,GAAY,OAApC;AACA,MAAIiB,UAAU,GAAIf,IAAI,GAAG,MAAH,GAAY,MAAlC,CAhD0B,CAiD1B;;AACA,MAAIgB,cAAJ;;AACA,MAAIZ,OAAO,GAAG,EAAd,EAAkB;AAChBY,IAAAA,cAAc,GAAG,MAAIZ,OAArB;AACD,GAFD,MAEO;AACLY,IAAAA,cAAc,GAAGZ,OAAjB;AACD;;AAID,sBAEE;AAAA,2BAEI;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,6BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAG,SAAjB;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAEQ,WAArC;AAAA,sBAAoDE;AAApD;AAAA;AAAA;AAAA;AAAA,kBADF,EAC4E,GAD5E,eAEE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,OAAO,EAAGD,UAAtC;AAAA,sBAAoDE;AAApD;AAAA;AAAA;AAAA;AAAA,kBAFF,EAE2E,GAF3E;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6Bb,OAAO,GAAG,GAAV,GAAgBc;AAA7C;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD,CA3ED;;GAAMtB,Q;UAEuCD,Q;;;KAFvCC,Q;AA6EN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport useTimer from './useTimer';\nimport './ToDoList.css'\n\nconst OurTimer = (props) => {\n  const roomId =  props.room;\n  const {start, sendStart, work, sendWork} = useTimer(roomId)\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n\n  //function for decrementing timer\n  const decrement = () => {\n    if (start === true) {\n      const intervalId = setInterval(() => {\n        setSeconds((prev) => prev - 1);\n      }, 1000);\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }\n\n  //calls decrement every time start changes\n  useEffect(decrement, [start]);\n\n\n  //function for adjusting display time\n  const time = () => {\n    if (start === true){\n      sendWork(work,seconds,minutes)\n    }\n  }\n\n  //calls time on every re-render\n  useEffect(time);\n\n  //click handlers\n  const handleStart = () => sendStart(start);\n\n  const handleWork = () => {\n    sendWork(!work)\n    if (work === true){\n      setMinutes(5);\n      setSeconds(0);\n    } else {\n      setMinutes(25);\n      setSeconds(0);\n    }\n  }\n\n  //variables for display\n  let startStatus = (start ? 'STOP' : 'START');\n  let workStatus = (work ? 'REST' : 'WORK');\n  //adds zero when seconds gets into single digits\n  let secondsDisplay;\n  if (seconds < 10) {\n    secondsDisplay = '0'+seconds\n  } else {\n    secondsDisplay = seconds\n  }\n\n  \n\n  return (\n    \n    <section>\n        \n        <section className=\"timerTimer\">\n          <div>\n            <div className = 'buttons'>\n              <Button variant=\"secondary\" onClick={handleStart} >{startStatus}</Button>{' '}\n              <Button variant=\"secondary\" onClick ={handleWork} >{workStatus}</Button>{' '} \n            </div> \n            <h1 className='timerMargin'>{minutes + ':' + secondsDisplay}</h1>\n          </div>\n\n      </section> \n    </section>\n  )\n}\n\nexport default OurTimer\n"]},"metadata":{},"sourceType":"module"}