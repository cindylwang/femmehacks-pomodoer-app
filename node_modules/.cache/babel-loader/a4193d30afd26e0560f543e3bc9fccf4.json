{"ast":null,"code":"var _jsxFileName = \"/Users/cindywang/femmehacks-pomodoer-app/src/components/Timer/Timer.js\";\nimport React, { ComponentType } from 'react';\nimport './Timer.css';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends ComponentType {\n  //   constructor(props) {\n  //     super(props);\n  //     this.state ={\n  //       started: false,\n  //       work: true,\n  //       count: 1500,\n  //       // minutes: 24,\n  //       // seconds: 59,\n  //       over: false,\n  //     }\n  //   }\n  //   //handling if work/rest or start/stop button is pushed, alters states so we can change state-reliant displays later\n  //   handleClick() {\n  //     this.setState({\n  //       started: (!this.state.started),\n  //       work: (!this.state.work),\n  //     })\n  //   }\n  //   componentDidMount(){\n  //     const {startCount} = this.props\n  //     this.setState({\n  //         count: startCount\n  //     })\n  //     if (this.state.started === true) {\n  //       this.interval = setInterval(()=>{\n  //         this.setState(prevState =>({\n  //             count: prevState.count - 1\n  //             }))\n  //         }, 1000)\n  //     }\n  // }\n  // componentWillUnmount(){\n  //     clearInterval(this.interval)\n  // }\n  render() {\n    // let startStatus = (this.state.started ? 'STOP' : 'START');\n    // let workStatus = (this.state.work ? 'REST' : 'WORK');\n    // const {count} = this.state\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"timer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"row\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"hello please work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"timer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n} // exporting component\n\n\nexport default Timer; //     const tick = () => {\n//       if (this.state.work === false || this.state.over === false)\n//       if (this.state.minutes === 0 && this.state.seconds === 0) this.setState({over: true});\n//       else if (this.state.rest === true) rest();\n//       else if (this.state.seconds === 0) {\n//          this.setState({minutes: this.state.minutes - 1})\n//          this.setState({seconds: 59})\n//       } else {\n//          this.setState({seconds: this.state.seconds - 1})\n//       }\n//     const rest = () => {\n// if (this.state.work === true) return;\n// else{\n//   this.setState({minutes: 4})\n//   this.setState({seconds: 59})\n// if (this.state.seconds === 0) {\n//  this.setState({minutes: this.state.minutes - 1})\n//  this.setState({seconds: 59})\n//} else {\n//  this.setState({seconds: this.state.seconds - 1})\n// } \n//      }","map":{"version":3,"sources":["/Users/cindywang/femmehacks-pomodoer-app/src/components/Timer/Timer.js"],"names":["React","ComponentType","Button","Timer","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAIA,MAAMC,KAAN,SAAoBF,aAApB,CAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAEEG,EAAAA,MAAM,GAAI;AACR;AACA;AACA;AAEA,wBACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA,8BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAjE+B,C,CAsEhC;;;AACA,eAAeD,KAAf,C,CAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACU;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACF;AACV","sourcesContent":["import React, {ComponentType} from 'react';\nimport './Timer.css'\nimport Button from 'react-bootstrap/Button';\n\n\n\nclass Timer extends ComponentType {\n//   constructor(props) {\n//     super(props);\n//     this.state ={\n//       started: false,\n//       work: true,\n//       count: 1500,\n//       // minutes: 24,\n//       // seconds: 59,\n//       over: false,\n//     }\n//   }\n\n//   //handling if work/rest or start/stop button is pushed, alters states so we can change state-reliant displays later\n//   handleClick() {\n//     this.setState({\n//       started: (!this.state.started),\n//       work: (!this.state.work),\n//     })\n//   }\n\n//   componentDidMount(){\n//     const {startCount} = this.props\n//     this.setState({\n//         count: startCount\n//     })\n//     if (this.state.started === true) {\n//       this.interval = setInterval(()=>{\n//         this.setState(prevState =>({\n//             count: prevState.count - 1\n//             }))\n//         }, 1000)\n//     }\n\n// }\n\n\n\n\n\n\n// componentWillUnmount(){\n//     clearInterval(this.interval)\n// }\n  \n  render () {\n    // let startStatus = (this.state.started ? 'STOP' : 'START');\n    // let workStatus = (this.state.work ? 'REST' : 'WORK');\n    // const {count} = this.state\n\n    return (\n      <section className=\"timer-container\">\n        <row>\n          <p>hello please work</p>\n        {/* hopefully renders buttons in a row on top of the timer. added custom css for the buttons too!*/}\n        {/* <Button variant=\"secondary\" onClick={() => this.handleClick()}>{startStatus}</Button>{' '}\n        <Button variant=\"secondary\" onClick={() => this.handleClick()}>{workStatus}</Button>{' '} */}\n        </row>\n        <section className=\"timer\">\n          <div>\n              {/* <h1>{count}</h1> */}\n          </div>\n        </section>\n      </section> \n    )\n  }\n  \n  \n}\n\n  // exporting component\n  export default Timer\n\n\n\n\n//     const tick = () => {\n//       if (this.state.work === false || this.state.over === false)\n//       if (this.state.minutes === 0 && this.state.seconds === 0) this.setState({over: true});\n//       else if (this.state.rest === true) rest();\n//       else if (this.state.seconds === 0) {\n//          this.setState({minutes: this.state.minutes - 1})\n//          this.setState({seconds: 59})\n//       } else {\n//          this.setState({seconds: this.state.seconds - 1})\n//       }\n\n//     const rest = () => {\n          // if (this.state.work === true) return;\n          // else{\n          //   this.setState({minutes: 4})\n          //   this.setState({seconds: 59})\n          // if (this.state.seconds === 0) {\n            //  this.setState({minutes: this.state.minutes - 1})\n            //  this.setState({seconds: 59})\n            //} else {\n            //  this.setState({seconds: this.state.seconds - 1})\n          // } \n//      }\n  \n  \n"]},"metadata":{},"sourceType":"module"}